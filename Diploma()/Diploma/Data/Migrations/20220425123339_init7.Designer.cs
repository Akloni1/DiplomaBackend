// <auto-generated />
using System;
using Diploma;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Diploma.Data.Migrations
{
    [DbContext(typeof(BoxContext))]
    [Migration("20220425123339_init7")]
    partial class init7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Diploma.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoxingClubId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.HasIndex("BoxingClubId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Diploma.Boxers", b =>
                {
                    b.Property<int>("BoxerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoxingClubId")
                        .HasColumnType("int");

                    b.Property<int?>("CoachId")
                        .HasColumnName("CoachID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("Discharge")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("NumberOfFightsHeld")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfWins")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TrainingExperience")
                        .HasColumnType("float");

                    b.Property<int?>("Weight")
                        .HasColumnType("int");

                    b.HasKey("BoxerId");

                    b.HasIndex("BoxingClubId");

                    b.HasIndex("CoachId");

                    b.ToTable("Boxers");
                });

            modelBuilder.Entity("Diploma.BoxingClubs", b =>
                {
                    b.Property<int>("BoxingClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClubAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ClubName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("BoxingClubId");

                    b.ToTable("BoxingClubs");
                });

            modelBuilder.Entity("Diploma.Coaches", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CoachID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoxingClubId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportsTitle")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CoachId");

                    b.HasIndex("BoxingClubId");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("Diploma.Competitions", b =>
                {
                    b.Property<int>("CompetitionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompetitionsID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompetitionsAddress")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CompetitionsName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsStarted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("CompetitionsId");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("Diploma.CompetitionsBoxers", b =>
                {
                    b.Property<int>("CompetitionsId")
                        .HasColumnName("CompetitionsID")
                        .HasColumnType("int");

                    b.Property<int>("BoxerId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionsId", "BoxerId");

                    b.HasIndex("BoxerId");

                    b.ToTable("CompetitionsBoxers");
                });

            modelBuilder.Entity("Diploma.CompetitionsClubs", b =>
                {
                    b.Property<int>("CompetitionsId")
                        .HasColumnName("CompetitionsID")
                        .HasColumnType("int");

                    b.Property<int>("BoxingClubId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionsId", "BoxingClubId");

                    b.HasIndex("BoxingClubId");

                    b.ToTable("CompetitionsClubs");
                });

            modelBuilder.Entity("Diploma.Lead", b =>
                {
                    b.Property<int>("LeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeadId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("Diploma.Admin", b =>
                {
                    b.HasOne("Diploma.BoxingClubs", "BoxingClub")
                        .WithMany("Admin")
                        .HasForeignKey("BoxingClubId")
                        .HasConstraintName("FK_EmployeesClub_BoxingClubs");
                });

            modelBuilder.Entity("Diploma.Boxers", b =>
                {
                    b.HasOne("Diploma.BoxingClubs", "BoxingClub")
                        .WithMany("Boxers")
                        .HasForeignKey("BoxingClubId")
                        .HasConstraintName("FK_Boxers_BoxingClubs");

                    b.HasOne("Diploma.Coaches", "Coach")
                        .WithMany("Boxers")
                        .HasForeignKey("CoachId")
                        .HasConstraintName("FK_Boxers_Coaches");
                });

            modelBuilder.Entity("Diploma.Coaches", b =>
                {
                    b.HasOne("Diploma.BoxingClubs", "BoxingClub")
                        .WithMany("Coaches")
                        .HasForeignKey("BoxingClubId")
                        .HasConstraintName("FK_Coaches_BoxingClubs");
                });

            modelBuilder.Entity("Diploma.CompetitionsBoxers", b =>
                {
                    b.HasOne("Diploma.Boxers", "Boxer")
                        .WithMany("CompetitionsBoxers")
                        .HasForeignKey("BoxerId")
                        .HasConstraintName("FK_CompetitionsBoxers_Boxers")
                        .IsRequired();

                    b.HasOne("Diploma.Competitions", "Competitions")
                        .WithMany("CompetitionsBoxers")
                        .HasForeignKey("CompetitionsId")
                        .HasConstraintName("FK_CompetitionsBoxers_Competitions")
                        .IsRequired();
                });

            modelBuilder.Entity("Diploma.CompetitionsClubs", b =>
                {
                    b.HasOne("Diploma.BoxingClubs", "BoxingClub")
                        .WithMany("CompetitionsClubs")
                        .HasForeignKey("BoxingClubId")
                        .HasConstraintName("FK_CompetitionsClubs_BoxingClubs")
                        .IsRequired();

                    b.HasOne("Diploma.Competitions", "Competitions")
                        .WithMany("CompetitionsClubs")
                        .HasForeignKey("CompetitionsId")
                        .HasConstraintName("FK_CompetitionsClubs_Competitions")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
